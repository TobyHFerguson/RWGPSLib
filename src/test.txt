// This file cannot be imported into the main codebase. It is used for testing purposes only.
// This file should be renamed to test.js before deploying to Apps Script.

const Credentials = {
    username: "rides@santacruzcycling.org", 
    password: "E!o0TqX0fiW4RBdu"
  }
const Globals = {
  STARTDATETIMECOLUMNNAME: "Date Time",
  GROUPCOLUMNNAME: "Group",
  STARTLOCATIONCOLUMNNAME: "Start Location",
  ROUTECOLUMNNAME: "Route",
  RIDELEADERCOLUMNNAME: "Ride Leader",
  RIDECOLUMNNAME: "Ride",
  ADDRESSCOLUMNNAME: "Address",
  LOCATIONCOLUMNNAME: "Location",
  PREFIXCOLUMNNAME: "Prefix",

  RIDE_LEADER_TBD_NAME: 'To Be Determined',

  A_TEMPLATE: `https://ridewithgps.com/events/186557-a-template`,
  B_TEMPLATE: `https://ridewithgps.com/events/186234-b-template`,
  C_TEMPLATE: `https://ridewithgps.com/events/186235-c-template`,
  SIGN_IN_URI: `https://ridewithgps.com/organizations/47/sign_in`,
  EVENTS_URI: 'https://ridewithgps.com/events/',

  SCCCC_USER_ID: 621846,
  RIDE_LEADER_TBD_ID: 4733240,

  METERS_TO_FEET: 3.28084,
  METERS_TO_MILES: 6.213712e-4,

  // LENGTHS are in miles
  // ELEVATION_GAINS are in feet
  C_RIDE_MAX_LENGTH: 35,
  C_RIDE_MAX_ELEVATION_GAIN: 2000,
  B_RIDE_MAX_LENGTH: 50,
  B_RIDE_MAX_ELEVATION_GAIN: 3000,
  A_RIDE_MIN_LENGTH: 40,
  A_RIDE_MAX_LENGTH: 80,
  A_RIDE_MIN_ELEVATION_GAIN: 3000,

  // Number of days after an event or an import that a route will expire
  EXPIRY_DELAY: 30,
}
const rwgpsService = newRWGPSService(Credentials.username, Credentials.password, Globals)
const rwgps = newRWGPS(rwgpsService);

function testImportDeleteRoute() {
    const routes = [];
    try {
    routes.push(rwgps.importRoute('https://ridewithgps.com/routes/19551869'));
    routes.push(rwgps.importRoute({ url: 'https://ridewithgps.com/routes/19551869', visibility: 2, name: "Toby's new route", expiry: '12/24/2022' }));
    routes.push(rwgps.importRoute({ url: 'https://ridewithgps.com/routes/19551869', name: "Toby's Tagged route", expiry: '12/24/2022',
      tags: ['Tobys Tag'] }))
    }
    finally {
      console.log(routes[2])
      rwgps.batch_delete_routes(routes);
    }
  }